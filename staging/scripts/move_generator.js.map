{"version":3,"sources":["move_generator.js"],"names":["MoveGenerator","entry","dep","step","board","max_dep","hist","color","length","undefined","posY","posX","temp_b","min_row","max_row","min_col","max_col","avails","i","j","k","push","m_gen"],"mappings":"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","file":"move_generator.js","sourcesContent":["/**\n * @fileOverview 走法生成模块，在启动搜索后负责生成、撤销棋子。\n */\n\"use strict\";\n/**\n * @module move_generator\n */\n/**\n * 走法生成类\n */\nclass MoveGenerator {\n    /**\n     * 生成一步走法，为了避免web worker 那边有太多的依赖甚至状态混乱，没有引如init模块，这个函数传参有点多\n     * @param entry {Array} 坐标\n     * @param dep {number} 搜索层深度\n     * @param step {object}\n     * @param board {Array} 当前棋盘\n     * @param max_dep {number} 最大搜索深度\n     * @param hist {Array} 历史记录\n     */\n    static moveForward(entry, dep, step, board, max_dep, hist) {\n        step.color = (max_dep - dep) % 2 ? hist[hist.length - 1][2] : !hist[hist.length - 1][2];\n        if (entry !== undefined) {\n            board[entry[0]][entry[1]] = step.color ? 1 : 0;\n            [step.posY, step.posX] = entry;\n        }\n    }\n    \n    /**\n     * 撤销之前的走法\n     * @param entry {array} 坐标\n     * @param step {object}\n     * @param board {Array} 棋盘\n     * @param hist {Array} 历史记录\n     */\n    static moveBack(entry, step, board, hist) {\n        if (entry !== undefined) {\n            board[entry[0]][entry[1]] = undefined;\n            [step.posY, step.posX] = hist[hist.length - 1];\n        }\n    }\n    \n    /**\n     * 获得所有的可走位置，在实际情况中，很少出现远离现存棋子的下子，因此这里限定了搜索范围在现有棋子的两个范围内，这个限定对AI思考能力是有影响的，但是从不限制到三格，三格到两格，两格到一格都对AI的速度有可感知的影响，且棋力的提高与范围的关系必然不是线性的。\n     * @param board {Array} 当前棋盘\n     * @param hist {Array} 历史记录\n     * @returns {entry[]}\n     */\n    static getAvail(board, hist) {\n        let temp_b = Array.from({length: 15}),\n        min_row, max_row, min_col, max_col, avails = [];\n        for (let i = 0; i < temp_b.length; i++) {\n            temp_b[i] = Array.from(board[i]);\n        }\n        if (hist.length === 0) {\n            return [[7, 7]];\n        } else {\n            for (let i = 0; i < hist.length; i++) {\n                min_row = hist[i][0] - 2 < 0 ? 0 : hist[i][0] - 2;\n                max_row = hist[i][0] + 2 > 14 ? 14 : hist[i][0] + 2;\n                min_col = hist[i][1] - 2 < 0 ? 0 : hist[i][1] - 2;\n                max_col = hist[i][1] + 2 > 14 ? 14 : hist[i][1] + 2;\n                for (let j = min_row; j <= max_row; j++) {\n                    for (let k = min_col; k <= max_col; k++) {\n                        if (temp_b[j][k] === undefined) {\n                            avails.push([j, k]);\n                            temp_b[j][k] = -1;\n                        }\n                    }\n                }\n            }\n            return avails;\n        }\n    }\n}\n/**\n * 将类本身导出\n * @type {MoveGenerator}\n */\nexport let m_gen = MoveGenerator;"]}