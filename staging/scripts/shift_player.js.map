{"version":3,"sources":["shift_player.js"],"names":["Shifter","cmt_AI","Worker","inter_id","id","start","Date","now","duration","dr_UI","document","querySelector","progressUI","progress","undefined","clearInterval","setInterval","Math","floor","innerHTML","value","s","b","hist","best_move","score","handler","turn","isGameOver","console","log","gui","showResult","clockControl","indicatorControl","postMessage","max_dep","addEventListener","e","progressNum","data","ceil","color","length","posY","posX","classList","remove","push","removeEventListener","step","indicator","GUI","n","stone","i","pop","element","class_arr","parent","parentNode","class_arr_par","target_row","target_col","substring","side","end_shade","createElement","dialog","message","cancel","restart","container","className","appendChild","style","display","grid","chess_move","shift","terminate","j"],"mappings":"AAAA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;;;AACA;;;IAGMA,O;AACF,uBAAc;AAAA;;AACV;;;;AAIA,aAAKC,MAAL,GAAc,IAAIC,MAAJ,CAAW,sBAAX,CAAd;AACA;;;;AAIA,aAAKC,QAAL,GAAgB,CAAhB;AACH;;AAED;;;;;;;;;;AAWA;;;;;qCAKaC,E,EAAI;AACb,gBAAIC,QAAQC,KAAKC,GAAL,EAAZ;AAAA,gBAAwBC,iBAAxB;AAAA,gBAAkCC,QAAQC,SAASC,aAAT,CAAuB,eAAvB,CAA1C;AAAA,gBACAC,aAAaF,SAASC,aAAT,CAAuB,mBAAvB,CADb;AAAA,gBAEAE,WAAWH,SAASC,aAAT,CAAuB,YAAvB,CAFX;AAGA,gBAAIP,OAAOU,SAAX,EAAsB;AAClBC,8BAAcX,EAAd;AACH,aAFD,MAEO;AACH,qBAAKD,QAAL,GAAgBa,YAAY,YAAW;AACnCR,+BAAWS,KAAKC,KAAL,CAAW,CAACZ,KAAKC,GAAL,KAAaF,KAAd,IAAuB,IAAlC,CAAX;AACA,wBAAIG,WAAW,EAAf,EAAmB;AACfC,8BAAMU,SAAN,GAAqBX,QAArB;AACAI,mCAAWQ,KAAX,GAAmBZ,WAAW,EAAX,GAAgB,GAAnC;AACH,qBAHD,MAGO;AACHI,mCAAWQ,KAAX,GAAmB,GAAnB;AACAP,iCAASM,SAAT;AACH;AACJ,iBATe,EASb,GATa,CAAhB;AAUH;AACJ;;AAED;;;;;;;;;kCAOoD;AAAA,gBAA5CE,CAA4C;;AAAA;;AAAA,gBAAlCC,CAAkC;AAAA,gBAAnBC,IAAmB;;AAChD,gBAAIC,kBAAJ;AAAA,gBAAeC,cAAf;AAAA,gBAAsBZ,iBAAtB;AAAA,gBAAgCa,iBAAhC;AACA,gBAAI,CAACL,EAAEM,IAAP,EAAa;AACT,oBAAI,wBAASC,UAAT,CAAoBP,CAApB,EAAuBC,CAAvB,CAAJ,EAA+B;AAC3BO,4BAAQC,GAAR,CAAY,YAAZ;AACAC,wBAAIC,UAAJ,CAAe,KAAf;AACH,iBAHD,MAGO;AACHH,4BAAQC,GAAR,CAAY,kBAAZ;AACAT,sBAAEM,IAAF,GAAS,IAAT;AACA,yBAAKM,YAAL,CAAkB,KAAK9B,QAAvB;AACAH,4BAAQkC,gBAAR,CAAyBb,CAAzB;AACA,yBAAKpB,MAAL,CAAYkC,WAAZ,CAAwB,CAACd,EAAEe,OAAH,EAAY,CAAC,KAAb,EAAoB,KAApB,EAA2Bf,CAA3B,EAA8BC,CAA9B,EAAiCC,IAAjC,CAAxB;AACA;AACA,yBAAKtB,MAAL,CAAYoC,gBAAZ,CAA6B,SAA7B,EAAwCX,WAAU,iBAACY,CAAD,EAAO;AACrD,4BAAIC,cAAc7B,SAASC,aAAT,CAAuB,YAAvB,CAAlB;AAAA,4BACAC,aAAaF,SAASC,aAAT,CAAuB,mBAAvB,CADb;AAEA,4BAAI,CAAC2B,EAAEE,IAAF,CAAO,CAAP,CAAL,EAAgB;AACZ5B,uCAAWQ,KAAX,GAAmBkB,EAAEE,IAAF,CAAO,CAAP,CAAnB;AACAD,wCAAYpB,SAAZ,sEAA0DF,KAAKwB,IAAL,CAAU7B,WAAWQ,KAArB,CAA1D;AACH,yBAHD,MAGO;AACHC,8BAAEM,IAAF,GAAS,KAAT;;AADG,uEAEkBW,EAAEE,IAFpB;;AAEFf,iCAFE;AAEKD,qCAFL;;AAGHH,8BAAEqB,KAAF,GAAU,CAACnB,KAAKA,KAAKoB,MAAL,GAAc,CAAnB,EAAsB,CAAtB,CAAX;AACArB,8BAAEE,UAAU,CAAV,CAAF,EAAgBA,UAAU,CAAV,CAAhB,IAAgCH,EAAEqB,KAAF,GAAU,CAAV,GAAc,CAA9C;AAJG,6CAKgBlB,SALhB;;AAAA;;AAKFH,8BAAEuB,IALA;AAKMvB,8BAAEwB,IALR;;AAMH,gCAAInC,SAASC,aAAT,CAAuB,WAAvB,CAAJ,EACID,SAASC,aAAT,CAAuB,WAAvB,EAAoCmC,SAApC,CAA8CC,MAA9C,CAAqD,UAArD;AACJrC,qCAASC,aAAT,QAA4Ba,UAAU,CAAV,CAA5B,aAAgDA,UAAU,CAAV,CAAhD,EAAgEL,SAAhE,GAA4EE,EAAEqB,KAAF,GAAU,sCAAV,GAAmD,sCAA/H;AACA9B,uCAAWQ,KAAX,GAAmB,GAAnB;AACAmB,wCAAYpB,SAAZ,sEAAyDP,WAAWQ,KAApE;AACAG,iCAAKyB,IAAL,CAAU,CAACxB,UAAU,CAAV,CAAD,EAAeA,UAAU,CAAV,CAAf,EAA6BH,EAAEqB,KAA/B,EAAsC,IAAtC,CAAV;AACA;AACA,gCAAI,wBAASd,UAAT,CAAoBP,CAApB,EAAuBC,CAAvB,CAAJ,EAA+B;AAC3BO,wCAAQC,GAAR,CAAY,QAAZ;AACAT,kCAAEM,IAAF,GAAS,IAAT;AACAI,oCAAIC,UAAJ,CAAe,IAAf;AACH,6BAJD,MAIO;AACHH,wCAAQC,GAAR,CAAY,aAAZ;AACA9B,wCAAQkC,gBAAR,CAAyBb,CAAzB;AACAA,kCAAEqB,KAAF,GAAU,CAACrB,EAAEqB,KAAb;AACA,sCAAKT,YAAL,CAAkB,MAAK9B,QAAvB;AACA,sCAAK8B,YAAL;AACH;AACD;AACA,kCAAKhC,MAAL,CAAYgD,mBAAZ,CAAgC,SAAhC,EAA2CvB,QAA3C;AACH;AACJ,qBAjCD;AAkCH;AACJ,aA9CD,MA8CO;AACH,oBAAI,wBAASE,UAAT,CAAoBP,CAApB,EAAuBC,CAAvB,CAAJ,EAA+B;AAC3BO,4BAAQC,GAAR,CAAY,QAAZ;AACAT,sBAAEM,IAAF,GAAS,IAAT;AACAI,wBAAIC,UAAJ,CAAe,IAAf;AACH,iBAJD,MAIO;AACHH,4BAAQC,GAAR,CAAY,aAAZ;AACAT,sBAAEM,IAAF,GAAS,KAAT;AACA3B,4BAAQkC,gBAAR,CAAyBb,CAAzB;AACAA,sBAAEqB,KAAF,GAAU,CAACrB,EAAEqB,KAAb;AACA,yBAAKT,YAAL,CAAkB,KAAK9B,QAAvB;AACA,yBAAK8B,YAAL;AACH;AACJ;AACJ;;;yCArGuBiB,I,EAAM;AAC1B,gBAAIC,YAAYzC,SAASC,aAAT,CAAuB,YAAvB,CAAhB;AAAA,gBACAE,WAAWH,SAASC,aAAT,CAAuB,YAAvB,CADX;AAEAwC,sBAAUhC,SAAV,GAAsB+B,KAAKR,KAAL,GAAc,mCAAmCQ,KAAKvB,IAAL,GAAY,MAAZ,GAAqB,MAAxD,CAAd,GAAkF,mCAAmCuB,KAAKvB,IAAL,GAAY,MAAZ,GAAqB,MAAxD,CAAxG;AACAd,qBAASM,SAAT,GAAqB+B,KAAKvB,IAAL,yJAArB;AACH;;;;AAkGL;;;;;IAGMyB,G;;;;;;;;;AA0BF;;;;+BAIcC,C,EAAG;AACb,gBAAIC,cAAJ;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,CAApB,EAAuBE,GAAvB,EAA4B;AACxBD,wBAAQ,iBAAWE,GAAX,EAAR;AACA,gCAAUF,MAAM,CAAN,CAAV,EAAoBA,MAAM,CAAN,CAApB,IAAgCxC,SAAhC;AACAJ,yBAASC,aAAT,QAA4B2C,MAAM,CAAN,CAA5B,aAA4CA,MAAM,CAAN,CAA5C,EAAwDnC,SAAxD,GAAoE,EAApE;AACAT,yBAASC,aAAT,QAA4B2C,MAAM,CAAN,CAA5B,aAA4CA,MAAM,CAAN,CAA5C,EAAwDR,SAAxD,CAAkEC,MAAlE,CAAyE,UAAzE;AACH;AACJ;;AAED;;;;;;AAvCA;;;;;;qCA4CoBU,O,EAAS;AACzB,gBAAIC,YAAYD,QAAQX,SAAxB;AAAA,gBACAa,SAASF,QAAQG,UADjB;AAAA,gBAEAC,gBAAgBF,OAAOb,SAFvB;AAAA,gBAGAgB,mBAHA;AAAA,gBAGYC,mBAHZ;AAIAD,yBAAa,CAACD,cAAc,CAAd,EAAiBG,SAAjB,CAA2B,CAA3B,CAAd;AACAD,yBAAa,CAACL,UAAU,CAAV,EAAaM,SAAb,CAAuB,CAAvB,CAAd;AACA,mBAAO,CAACF,UAAD,EAAaC,UAAb,CAAP;AACH;;AAED;;;;;;;mCAIkBE,I,EAAM;AACpB,gBAAIC,YAAYxD,SAASyD,aAAT,CAAuB,KAAvB,CAAhB;AAAA,gBACAC,SAAS1D,SAASyD,aAAT,CAAuB,KAAvB,CADT;AAAA,gBAEAE,UAAU3D,SAASyD,aAAT,CAAuB,GAAvB,CAFV;AAAA,gBAGAG,SAAS5D,SAASyD,aAAT,CAAuB,KAAvB,CAHT;AAAA,gBAIAI,UAAU7D,SAASyD,aAAT,CAAuB,KAAvB,CAJV;AAAA,gBAKAK,YAAY9D,SAASC,aAAT,CAAuB,MAAvB,CALZ;AAMAuD,sBAAUO,SAAV,GAAsB,WAAtB;AACAL,mBAAOK,SAAP,GAAmB,YAAnB;AACAJ,oBAAQI,SAAR,GAAoB,SAApB;AACAH,mBAAOG,SAAP,GAAmB,QAAnB;AACAF,oBAAQE,SAAR,GAAoB,UAApB;AACAJ,oBAAQlD,SAAR,GAAoB8C,OAAO,eAAP,GAAyB,gBAA7C;AACAK,mBAAOnD,SAAP,GAAmB,KAAnB;AACAoD,oBAAQpD,SAAR,GAAoB,KAApB;AACA+C,sBAAUQ,WAAV,CAAsBN,MAAtB;AACAA,mBAAOM,WAAP,CAAmBL,OAAnB;AACAD,mBAAOM,WAAP,CAAmBJ,MAAnB;AACAF,mBAAOM,WAAP,CAAmBH,OAAnB;AACAC,sBAAUE,WAAV,CAAsBR,SAAtB;AACA;AACAK,oBAAQlC,gBAAR,CAAyB,OAAzB,EAAkC,YAAM;AACpC6B,0BAAUS,KAAV,CAAgBC,OAAhB,GAA0B,MAA1B;AACAxB,oBAAImB,OAAJ;AACH,aAHD;AAIA;AACAD,mBAAOjC,gBAAP,CAAwB,OAAxB,EAAiC,YAAM;AACnC6B,0BAAUnB,MAAV;AACA,qBAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAI,iBAAWZ,MAA/B,EAAuCY,GAAvC,EAA4C;AACxC7C,6BAASC,aAAT,QAA4B,iBAAW4C,CAAX,EAAc,CAAd,CAA5B,cAAqD,iBAAWA,CAAX,EAAc,CAAd,CAArD,WAA6EpC,SAA7E,GAAyFoC,IAAI,CAAJ,GAAQ,EAAjG;AACH;AACJ,aALD;AAMH;;;;AAEL;;;;;;;AA7FMH,G,CAIKmB,O,GAAU,YAAM;AACnB,QAAIM,OAAO,EAAX;AAAA,QAAeC,aAAapE,SAASC,aAAT,CAAuB,aAAvB,CAA5B;AACAD,aAASC,aAAT,CAAuB,QAAvB,EAAiCgE,KAAjC,CAAuCC,OAAvC,GAAiD,OAAjD;AACAG,UAAM9E,MAAN,CAAa+E,SAAb;AACAD,UAAM9C,YAAN,CAAmB8C,MAAM5E,QAAzB;AAJmB,eAK6B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAL7B;AAKlB,eAAKwB,IALa;AAKP,eAAKe,KALE;AAKK,eAAKG,IALV;AAKgB,eAAKD,IALrB;;AAMnB,oBAAUD,MAAV,GAAmB,CAAnB;AACA,SAAK,IAAIY,IAAI,EAAb,EAAiBA,GAAjB,GAAuB;AACnB,wBAAUP,IAAV,CAAe,oBAAW,EAACL,QAAQ,EAAT,EAAX,CAAf;AACH;AACD,qBAAWA,MAAX,GAAoB,CAApB;AACA,SAAK,IAAIY,KAAI,CAAb,EAAgBA,KAAI,EAApB,EAAwBA,IAAxB,EAA6B;AACzBsB,sCAA4BtB,EAA5B;AACA,aAAK,IAAI0B,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AACzBJ,+CAAiCI,CAAjC;AACH;AACDJ,gBAAQ,OAAR;AACH;AACDC,eAAW3D,SAAX,GAAuB0D,IAAvB;AACA,YA2EGE,KA3EH,WAAQ,IAAI/E,OAAJ,EAAR;AACH,C;;AA0EE,IAAI+E,wBAAQ,IAAI/E,OAAJ,EAAZ;AACP;;;;AAIO,IAAI+B,oBAAMqB,GAAV","file":"shift_player.js","sourcesContent":["/**\n * @fileOverview 这个模块提供了 Shifter 和 GUI 两个类，Shifter 类负责转换逻辑，GUI 负责玩家动作反馈\n */\n\"use strict\";\n/**\n * @module shift_player\n * @see module: init\n * @see module: eval_function\n */\n\nimport {step, virtual_b, steps_hist, max_dep} from \"./init.js\";\nimport {getScore} from \"./eval_function.js\";\n/**\n * Shifter 转换下棋方\n */\nclass Shifter {\n    constructor() {\n        /**\n         * AI Web Worker\n         * @type {Worker}\n         */\n        this.cmt_AI = new Worker(\"scripts/AI_worker.js\");\n        /**\n         * 计时器ID\n         * @type {number}\n         */\n        this.inter_id = 0;\n    }\n    \n    /**\n     * 当前玩家提示\n     * @param step {object}\n     */\n    static indicatorControl(step) {\n        let indicator = document.querySelector(\".indicator\"),\n        progress = document.querySelector(\"p.progress\");\n        indicator.innerHTML = step.color ? ('<span class=\"stone-b\"></span>' + (step.turn ? '电脑走棋' : '玩家走棋')) : ('<span class=\"stone-w\"></span>' + (step.turn ? '电脑走棋' : '玩家走棋'));\n        progress.innerHTML = step.turn ? `电脑思考中： <span class=\"progress\"></span></p>` : `电脑瞌睡中... <span class=\"progress\"></span></p>`;\n    }\n    \n    /**\n     * 控制玩家下棋数秒和 AI思考进度反馈\n     * @param [id] {number}  计时器ID\n     * @see Shifter.inter_id\n     */\n    clockControl(id) {\n        let start = Date.now(), duration, dr_UI = document.querySelector(\"span.progress\"),\n        progressUI = document.querySelector(\"progress.progress\"),\n        progress = document.querySelector(\"p.progress\");\n        if (id !== undefined) {\n            clearInterval(id);\n        } else {\n            this.inter_id = setInterval(function() {\n                duration = Math.floor((Date.now() - start) / 1000);\n                if (duration < 20) {\n                    dr_UI.innerHTML = `${duration}秒`;\n                    progressUI.value = duration / 20 * 100;\n                } else {\n                    progressUI.value = 100;\n                    progress.innerHTML = `电脑数着数着睡着了... <span class=\"progress\"></span></p>`;\n                }\n            }, 100);\n        }\n    }\n    \n    /**\n     * 转换下棋方逻辑抽象函数\n     * @param [s] {object} 最后一步棋\n     * @param [b] {Array} 当前虚拟棋盘\n     * @param [hist] {Array} 历史记录\n     */\n    \n    convert(s = step, b = virtual_b, hist = steps_hist) {\n        let best_move, score, progress, handler;\n        if (!s.turn) {\n            if (getScore.isGameOver(s, b)) {\n                console.log(\"Player win\");\n                gui.showResult(false);\n            } else {\n                console.log(\"AI begin to work\");\n                s.turn = true;\n                this.clockControl(this.inter_id);\n                Shifter.indicatorControl(s);\n                this.cmt_AI.postMessage([s.max_dep, -10000, 10000, s, b, hist]);\n                // babel 的新特性在编译时可以给箭头函数name属性，方便函数调用自身的同时不会更改this\n                this.cmt_AI.addEventListener(\"message\", handler = (e) => {\n                    let progressNum = document.querySelector(\"p.progress\"),\n                    progressUI = document.querySelector(\"progress.progress\");\n                    if (!e.data[1]) {\n                        progressUI.value = e.data[0];\n                        progressNum.innerHTML = `电脑思考中：<span class=\"progress\"> ${ Math.ceil(progressUI.value)} %</span></p>`;\n                    } else {\n                        s.turn = false;\n                        [score, best_move] = e.data;\n                        s.color = !hist[hist.length - 1][2]\n                        b[best_move[0]][best_move[1]] = s.color ? 1 : 0;\n                        [s.posY, s.posX] = best_move;\n                        if (document.querySelector(\".new-step\"))\n                            document.querySelector(\".new-step\").classList.remove(\"new-step\");\n                        document.querySelector(`.r${best_move[0]} .col${best_move[1]}`).innerHTML = s.color ? '<div class=\"stone-w new-step\"></div>' : '<div class=\"stone-b new-step\"></div>';\n                        progressUI.value = 100;\n                        progressNum.innerHTML = `电脑思考完成 <span class=\"progress\">${progressUI.value}%</span></p>`;\n                        hist.push([best_move[0], best_move[1], s.color, true]);\n                        //TODO: 重复代码，逻辑待优化\n                        if (getScore.isGameOver(s, b)) {\n                            console.log(\"AI win\");\n                            s.turn = true;\n                            gui.showResult(true);\n                        } else {\n                            console.log(\"Player turn\");\n                            Shifter.indicatorControl(s);\n                            s.color = !s.color;\n                            this.clockControl(this.inter_id);\n                            this.clockControl();\n                        }\n                        // 停止监听避免多次接受数据\n                        this.cmt_AI.removeEventListener(\"message\", handler);\n                    }\n                });\n            }\n        } else {\n            if (getScore.isGameOver(s, b)) {\n                console.log(\"AI win\");\n                s.turn = true;\n                gui.showResult(true);\n            } else {\n                console.log(\"Player turn\");\n                s.turn = false;\n                Shifter.indicatorControl(s);\n                s.color = !s.color;\n                this.clockControl(this.inter_id);\n                this.clockControl();\n            }\n        }\n    }\n}\n/**\n * UI逻辑处理\n */\nclass GUI {\n    /**\n     * 重新开始游戏\n     */\n    static restart = () => {\n        let grid = '', chess_move = document.querySelector(\".chess-move\");\n        document.querySelector(\".shade\").style.display = \"block\";\n        shift.cmt_AI.terminate();\n        shift.clockControl(shift.inter_id);\n        [step.turn, step.color, step.posX, step.posY] = [0, 0, 0, 0];\n        virtual_b.length = 0;\n        for (let i = 15; i--;) {\n            virtual_b.push(Array.from({length: 15}));\n        }\n        steps_hist.length = 0;\n        for (let i = 0; i < 15; i++) {\n            grid += `<ul class=\\\"row r${i} \\\">`;\n            for (let j = 0; j < 15; j++) {\n                grid += `<li class=\\\"column col${j}\\\"></li>`;\n            }\n            grid += '</ul>';\n        }\n        chess_move.innerHTML = grid;\n        shift = new Shifter();\n    }\n    \n    /**\n     * 悔棋删除棋子，同时将最后一步的标记前移\n     * @param n {number} 删除棋子的个数\n     */\n    static remove(n) {\n        let stone;\n        for (let i = 0; i < n; i++) {\n            stone = steps_hist.pop();\n            virtual_b[stone[0]][stone[1]] = undefined;\n            document.querySelector(`.r${stone[0]} .col${stone[1]}`).innerHTML = '';\n            document.querySelector(`.r${stone[0]} .col${stone[1]}`).classList.remove(\"new-step\");\n        }\n    }\n    \n    /**\n     * 获取玩家下棋的位置\n     * @param element {Node}\n     * @returns {Array} 返回坐标数组\n     */\n    static getPlayerPos(element) {\n        let class_arr = element.classList,\n        parent = element.parentNode,\n        class_arr_par = parent.classList,\n        target_row, target_col;\n        target_row = +class_arr_par[1].substring(1);\n        target_col = +class_arr[1].substring(3);\n        return [target_row, target_col];\n    }\n    \n    /**\n     * 游戏结束，处理界面\n     * @param side {boolean} side?'AI赢':'玩家赢'\n     */\n    static showResult(side) {\n        let end_shade = document.createElement(\"div\"),\n        dialog = document.createElement(\"div\"),\n        message = document.createElement(\"p\"),\n        cancel = document.createElement(\"div\"),\n        restart = document.createElement(\"div\"),\n        container = document.querySelector(\"body\");\n        end_shade.className = \"end-shade\";\n        dialog.className = \"end-window\";\n        message.className = \"message\";\n        cancel.className = \"review\";\n        restart.className = \"new-game\";\n        message.innerHTML = side ? \"你输了，AI偷偷鄙视了人类\" : \"你赢了，但AI觉得机器太慢了\";\n        cancel.innerHTML = \"取 消\";\n        restart.innerHTML = \"再 来\";\n        end_shade.appendChild(dialog);\n        dialog.appendChild(message);\n        dialog.appendChild(cancel);\n        dialog.appendChild(restart);\n        container.appendChild(end_shade);\n        // 玩家选择再来一局\n        restart.addEventListener(\"click\", () => {\n            end_shade.style.display = 'none';\n            GUI.restart();\n        });\n        //玩家选择取消，可以查看复盘\n        cancel.addEventListener(\"click\", () => {\n            end_shade.remove();\n            for (let i = 0; i < steps_hist.length; i++) {\n                document.querySelector(`.r${steps_hist[i][0]}  .col${steps_hist[i][1]} div`).innerHTML = i + 1 + '';\n            }\n        });\n    }\n}\n/**\n * @see Shifter#shift\n * 导出 Shifter的实例\n * @type {Shifter}\n */\nexport let shift = new Shifter();\n/**\n * 导出GUI类\n * @type {GUI}\n */\nexport let gui = GUI;\n\n\n"]}