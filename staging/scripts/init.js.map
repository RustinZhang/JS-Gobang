{"version":3,"sources":["init.js"],"names":["Init","grid","shade","document","createElement","container","querySelector","chess_move","className","innerHTML","appendChild","i","j","board","push","length","drawUI","step","turn","color","posX","posY","max_dep","virtual_b","chessBoard","steps_hist"],"mappings":"AAAA;;;;AAIA;AACA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;IAGMA,I;;;;;;;;AACF;iCACgB;AACZ,gBAAIC,OAAO,EAAX;AAAA,gBACAC,QAAQC,SAASC,aAAT,CAAuB,KAAvB,CADR;AAAA,gBAEAC,YAAYF,SAASG,aAAT,CAAuB,MAAvB,CAFZ;AAAA,gBAGAC,aAAaJ,SAASG,aAAT,CAAuB,aAAvB,CAHb;AAIAJ,kBAAMM,SAAN,GAAkB,OAAlB;AACAN,kBAAMO,SAAN;AACAJ,sBAAUK,WAAV,CAAsBR,KAAtB;AACA,iBAAK,IAAIS,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AACzBV,8CAA4BU,CAA5B;AACA,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,EAApB,EAAwBA,GAAxB,EAA6B;AACzBX,4BAAQ,0BAA0BW,CAA1B,GAA8B,SAAtC;AACH;AACDX,wBAAQ,OAAR;AACH;AACDM,uBAAWE,SAAX,GAAuBR,IAAvB;AACH;;AAED;;;;qCACoB;AAChB,gBAAIY,QAAQ,EAAZ;AACA,iBAAK,IAAIF,IAAI,EAAb,EAAiBA,GAAjB,GAAuB;AACnBE,sBAAMC,IAAN,CAAW,oBAAW,EAACC,QAAQ,EAAT,EAAX,CAAX;AACH;AACD,mBAAOF,KAAP;AACH;;;;;AAGLb,KAAKgB,MAAL;AACA;;;AAGA,IAAIC,OAAO;AACPC,UAAS,KADF;AAEPC,WAAS,KAFF;AAGPC,UAAS,CAHF;AAIPC,UAAS,CAJF;AAKPC,aAAS;AALF,CAAX;;AAOA;;;AAGAC,YAAYvB,KAAKwB,UAAL,EAVZ;;AAWA;;;AAGAC,aAAa,EAdb;AAeA;;;;QAOIR,I,GAAAA,I;QAEAM,S,GAAAA,S;QAEAE,U,GAAAA,U","file":"init.js","sourcesContent":["/**\n * @fileOverview 程序加载初始化, step / virtual_board / steps_hist / max_step 将在模块间传递。\n * 命名约定：class: Class; variable: my_variable(noun); function: handleData (verb);\n */\n\"use strict\";\n/**\n * @module init\n */\n\n/**\n * 初始化棋盘，开局DOM结构建立\n */\nclass Init {\n    // 选棋遮罩，DOM棋盘绘制\n    static drawUI() {\n        let grid = '',\n        shade = document.createElement(\"div\"),\n        container = document.querySelector(\"body\"),\n        chess_move = document.querySelector(\".chess-move\");\n        shade.className = \"shade\";\n        shade.innerHTML = `<div class=\"dialog difficulty\"><p class=\"title\">请选难度，难度增高电脑思考时间加长</p><div class=\"easy choose-diff\">容易</div><div class=\"normal choose-diff\">普通</div>`;\n        container.appendChild(shade);\n        for (let i = 0; i < 15; i++) {\n            grid += `<ul class=\\\"row r${i}\\\">`;\n            for (let j = 0; j < 15; j++) {\n                grid += '<li class=\"column col' + j + '\"></li>';\n            }\n            grid += '</ul>';\n        }\n        chess_move.innerHTML = grid;\n    }\n    \n    // 抽象棋盘建立\n    static chessBoard() {\n        let board = [];\n        for (let i = 15; i--;) {\n            board.push(Array.from({length: 15}));\n        }\n        return board;\n    }\n}\n\nInit.drawUI();\n/**\n * @type {{turn: boolean, color: boolean, posX: number, posY: number, max_dep: number}}\n */\nlet step = {\n    turn   : false,\n    color  : false,\n    posX   : 0,\n    posY   : 0,\n    max_dep: 2\n},\n/**\n * @type {Array}\n */\nvirtual_b = Init.chessBoard(),\n/**\n * @type {Array}\n */\nsteps_hist = []\n/**\n * @type {number}\n */\n\n\nexport {\n    /** 当前走的棋 */\n    step,\n    /**  抽象棋盘 */\n    virtual_b,\n    /** 下棋历史的栈*/\n    steps_hist,\n};\n\n\n\n\n"]}